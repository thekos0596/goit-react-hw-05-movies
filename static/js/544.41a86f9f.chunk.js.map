{"version":3,"file":"static/js/544.41a86f9f.chunk.js","mappings":"uNAGaA,EAAYC,EAAAA,EAAAA,GAAH,+GAOTC,EAAYD,EAAAA,EAAAA,GAAH,wJAQTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+IAQTI,EAAWJ,EAAAA,EAAAA,IAAH,qFAKRK,EAAaL,EAAAA,EAAAA,EAAH,qK,SCtBVM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAErBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,cAA3B,OACV,SAACb,EAAD,WACE,UAACC,EAAD,CAAWa,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACJ,EAAD,CAAUc,IATD,mCASmBC,OAAON,GAAcO,IAAI,MACrD,SAACf,EAAD,iBAAaO,QAAb,IAAaA,EAAAA,EAASE,QAHVH,EADN,OAWnB,C,8ECRD,UAfa,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAoBC,KAAKH,EAC1B,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAYf,OAAQA,MAGzB,C,+LCfKmB,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMP,EAAiB,mCAAG,sGACRO,EAAAA,EAAAA,IAAA,4BAA+BL,IADvB,uBACvBM,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMvB,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,YAAyBe,IADnB,uBACrBM,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAe,mCAAG,WAAMxB,GAAN,yFACNoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCe,IAD3B,uBACrBM,EADqB,EACrBA,KADqB,kBAGtBA,EAAKI,MAHiB,2CAAH,sDAMfC,EAAc,mCAAG,WAAM1B,GAAN,yFACLoB,EAAAA,EAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCe,IAD5B,uBACpBM,EADoB,EACpBA,KADoB,kBAGrBA,EAAKC,SAHgB,2CAAH,sDAKdK,EAAc,mCAAG,WAAMC,GAAN,yFACLR,EAAAA,EAAAA,IAAA,wBACJL,EADI,kBACkBa,IAFb,uBACpBP,EADoB,EACpBA,KADoB,kBAKrBA,EAAKC,SALgB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n  transition: all 200ms ease-in-out;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieTitle,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, poster_path, original_name }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImg src={imageBaseUrl.concat(poster_path)} alt=\"\" />\n              <MovieTitle>{title ?? original_name}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getTrendingMovies } from 'services/fetchMovie';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovies().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'afc0fa936a8cd405bc4147ee7afbe2a0',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/all/week?${searchParams}`);\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}?${searchParams}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?${searchParams}`);\n\n  return data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?${searchParams}`);\n\n  return data.results;\n};\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n\n  return data.results;\n};\n"],"names":["MovieList","styled","MovieItem","MovieLink","Link","MovieImg","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","poster_path","original_name","to","state","from","src","concat","alt","useState","setMovies","useEffect","getTrendingMovies","then","searchParams","URLSearchParams","api_key","language","include_adult","axios","data","results","getMovieDetails","getMovieCredits","cast","getMovieReview","getMovieByName","name"],"sourceRoot":""}