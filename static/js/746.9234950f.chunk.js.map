{"version":3,"file":"static/js/746.9234950f.chunk.js","mappings":"uNAGaA,EAAYC,EAAAA,EAAAA,GAAH,+GAOTC,EAAYD,EAAAA,EAAAA,GAAH,wJAQTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,+IAQTI,EAAWJ,EAAAA,EAAAA,IAAH,qFAKRK,EAAaL,EAAAA,EAAAA,EAAH,qK,SCrBVM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAErBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,SAACV,EAAD,UACGQ,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,cAA3B,OACV,SAACb,EAAD,WACE,UAACC,EAAD,CAAWa,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMT,GAA/C,WACE,SAACJ,EAAD,CAAUc,IATD,mCASmBC,OAAON,GAAcO,IAAI,MACrD,SAACf,EAAD,iBAAaO,QAAb,IAAaA,EAAAA,EAASE,QAHVH,EADN,OAWnB,C,0GCnBD,EATkB,SAAC,GAA4B,IAA1BU,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7B,OACE,kBAAMA,SAAUA,EAAhB,WACE,kBAAOC,KAAK,OAAOF,SAAUA,KAC7B,mBAAQE,KAAK,SAAb,sBAGL,E,kBC8BD,EA/Be,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRL,EAAK,UAAGG,EAAaG,IAAI,gBAApB,QAAgC,GAEtCN,IAGLO,EAAAA,EAAAA,IAAeP,GAAOQ,KAAKT,EAC5B,GAAE,CAACI,IAWJ,OACE,iCACE,SAAC,EAAD,CAAWR,SAXM,SAAAc,GACnBR,EAASQ,EAAEC,OAAOC,MACnB,EASsCf,SAPlB,SAAAa,GACnBA,EAAEG,iBACFR,EAA0B,KAAVJ,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAC7C,KAKG,SAACpB,EAAA,EAAD,CAAYC,OAAQA,MAGzB,C,+LCjCKsB,EAAe,IAAIU,gBAAgB,CACvCC,QAAS,mCACTC,SAAU,QACVC,eAAe,IAGjBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAiB,mCAAG,sGACRD,EAAAA,EAAAA,IAAA,4BAA+Bd,IADvB,uBACvBgB,EADuB,EACvBA,KADuB,kBAGxBA,EAAKC,SAHmB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMpC,GAAN,yFACNgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,YAAyBkB,IADnB,uBACrBgB,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfG,EAAe,mCAAG,WAAMrC,GAAN,yFACNgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,oBAAiCkB,IAD3B,uBACrBgB,EADqB,EACrBA,KADqB,kBAGtBA,EAAKI,MAHiB,2CAAH,sDAMfC,EAAc,mCAAG,WAAMvC,GAAN,yFACLgC,EAAAA,EAAAA,IAAA,gBAAmBhC,EAAnB,oBAAiCkB,IAD5B,uBACpBgB,EADoB,EACpBA,KADoB,kBAGrBA,EAAKC,SAHgB,2CAAH,sDAKdb,EAAc,mCAAG,WAAMkB,GAAN,yFACLR,EAAAA,EAAAA,IAAA,wBACJd,EADI,kBACkBsB,IAFb,uBACpBN,EADoB,EACpBA,KADoB,kBAKrBA,EAAKC,SALgB,2CAAH,qD","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/fetchMovie.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  gap: 20px;\n`;\n\nexport const MovieItem = styled.li`\n  flex-basis: calc((100% - 100px) / 5);\n  max-height: 100%;\n  min-height: 390px;\n  border-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const MovieLink = styled(Link)`\n  object-fit: cover;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100%;\n`;\n\nexport const MovieImg = styled.img`\n  margin-bottom: 5px;\n  transition: all 200ms ease-in-out;\n`;\n\nexport const MovieTitle = styled.p`\n  height: 100%;\n  padding: 10px 8px;\n  font-weight: 500;\n  font-size: 18px;\n  text-align: center;\n  transition: all 200ms ease-in-out;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieItem,\n  MovieLink,\n  MovieImg,\n  MovieTitle,\n} from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const imageBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n  const location = useLocation();\n\n  return (\n    <>\n      <MovieList>\n        {movies.map(({ id, title, poster_path, original_name }) => (\n          <MovieItem key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <MovieImg src={imageBaseUrl.concat(poster_path)} alt=\"\" />\n              <MovieTitle>{title ?? original_name}</MovieTitle>\n            </MovieLink>\n          </MovieItem>\n        ))}\n      </MovieList>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\n","const SearchBar = ({ onChange, onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" onChange={onChange} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useSearchParams } from 'react-router-dom';\nimport { getMovieByName } from 'services/fetchMovie';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n\n    if (!query) {\n      return;\n    }\n    getMovieByName(query).then(setMovies);\n  }, [searchParams]);\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <>\n      <SearchBar onChange={handleChange} onSubmit={handleSubmit} />\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst searchParams = new URLSearchParams({\n  api_key: 'afc0fa936a8cd405bc4147ee7afbe2a0',\n  language: 'en-US',\n  include_adult: false,\n});\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/all/week?${searchParams}`);\n\n  return data.results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`movie/${id}?${searchParams}`);\n\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?${searchParams}`);\n\n  return data.cast;\n};\n\nexport const getMovieReview = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews?${searchParams}`);\n\n  return data.results;\n};\nexport const getMovieByName = async name => {\n  const { data } = await axios.get(\n    `/search/movie?${searchParams}&query=${name}`\n  );\n\n  return data.results;\n};\n"],"names":["MovieList","styled","MovieItem","MovieLink","Link","MovieImg","MovieTitle","MoviesList","movies","location","useLocation","map","id","title","poster_path","original_name","to","state","from","src","concat","alt","onChange","onSubmit","type","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","getMovieByName","then","e","target","value","preventDefault","URLSearchParams","api_key","language","include_adult","axios","getTrendingMovies","data","results","getMovieDetails","getMovieCredits","cast","getMovieReview","name"],"sourceRoot":""}